{"ast":null,"code":"var _jsxFileName = \"D:\\\\MIU\\\\daily-diary-fullstackjs-ci-cd\\\\daily-diary-front\\\\src\\\\components\\\\Post\\\\Votes\\\\Votes.tsx\",\n  _s = $RefreshSig$();\nimport { Rating } from \"@mui/material\";\nimport { useContext } from \"react\";\nimport { GlobalContext } from \"../../../contexts/PostsContext\";\nimport { PostService } from \"../../../services/post/postService\";\nimport { convertDateToFormat } from \"../../../utils/utils\";\nimport { CustomError } from \"../../../utils/customError\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Votes({\n  post\n}) {\n  _s();\n  const postService = new PostService();\n  const {\n    searchDate,\n    updateIsVoted,\n    updateLoading,\n    updateNotify\n  } = useContext(GlobalContext);\n  const setNewValue = newValue => {\n    if (newValue) {\n      post.vote = newValue;\n      votedPost(post.vote);\n    }\n  };\n  const votedPost = async votes => {\n    updateLoading(true);\n    try {\n      await postService.votedPostById(post.id, convertDateToFormat(searchDate, \"MM-dd-yyyy\"), votes);\n      updateIsVoted(true);\n      updateLoading(false);\n      updateNotify({\n        status: \"success\",\n        message: \"Voted post successfully!\"\n      });\n    } catch (error) {\n      let errMsg = \"Unknow error\";\n      if (error instanceof CustomError) {\n        errMsg = error.message;\n      }\n      updateLoading(false);\n      updateNotify({\n        status: \"error\",\n        message: errMsg\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Rating, {\n      name: \"customized-10\",\n      defaultValue: 0,\n      value: post.vote,\n      precision: 1,\n      max: 10,\n      onChange: (event, newValue) => {\n        setNewValue(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Votes, \"BQH9GokWXb0tddXMmN0ECfh+Gto=\");\n_c = Votes;\nvar _c;\n$RefreshReg$(_c, \"Votes\");","map":{"version":3,"names":["Rating","useContext","GlobalContext","PostService","convertDateToFormat","CustomError","jsxDEV","_jsxDEV","Fragment","_Fragment","Votes","post","_s","postService","searchDate","updateIsVoted","updateLoading","updateNotify","setNewValue","newValue","vote","votedPost","votes","votedPostById","id","status","message","error","errMsg","children","name","defaultValue","value","precision","max","onChange","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MIU/daily-diary-fullstackjs-ci-cd/daily-diary-front/src/components/Post/Votes/Votes.tsx"],"sourcesContent":["import { Rating } from \"@mui/material\";\r\nimport { Post } from \"../../../models/Post\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../../contexts/PostsContext\";\r\nimport { PostService } from \"../../../services/post/postService\";\r\nimport { convertDateToFormat } from \"../../../utils/utils\";\r\nimport { CustomError } from \"../../../utils/customError\";\r\n\r\nexport default function Votes({ post }: { post: Post }) {\r\n    const postService = new PostService();\r\n    const { searchDate, updateIsVoted, updateLoading, updateNotify } =\r\n        useContext(GlobalContext);\r\n\r\n    const setNewValue = (newValue: number | null) => {\r\n        if (newValue) {\r\n            post.vote = newValue;\r\n            votedPost(post.vote);\r\n        }\r\n    };\r\n\r\n    const votedPost = async (votes: number) => {\r\n        updateLoading(true);\r\n        try {\r\n            await postService.votedPostById(\r\n                post.id,\r\n                convertDateToFormat(searchDate, \"MM-dd-yyyy\"),\r\n                votes\r\n            );\r\n\r\n            updateIsVoted(true);\r\n            updateLoading(false);\r\n            updateNotify({\r\n                status: \"success\",\r\n                message: \"Voted post successfully!\",\r\n            });\r\n        } catch (error) {\r\n            let errMsg: string = \"Unknow error\";\r\n            if (error instanceof CustomError) {\r\n                errMsg = error.message;\r\n            }\r\n\r\n            updateLoading(false);\r\n            updateNotify({\r\n                status: \"error\",\r\n                message: errMsg,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Rating\r\n                name=\"customized-10\"\r\n                defaultValue={0}\r\n                value={post.vote}\r\n                precision={1}\r\n                max={10}\r\n                onChange={(event, newValue) => {\r\n                    setNewValue(newValue);\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,eAAe;AAEtC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,aAAa,QAAQ,gCAAgC;AAC9D,SAASC,WAAW,QAAQ,oCAAoC;AAChE,SAASC,mBAAmB,QAAQ,sBAAsB;AAC1D,SAASC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzD,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAqB,CAAC,EAAE;EAAAC,EAAA;EACpD,MAAMC,WAAW,GAAG,IAAIV,WAAW,CAAC,CAAC;EACrC,MAAM;IAAEW,UAAU;IAAEC,aAAa;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAC5DhB,UAAU,CAACC,aAAa,CAAC;EAE7B,MAAMgB,WAAW,GAAIC,QAAuB,IAAK;IAC7C,IAAIA,QAAQ,EAAE;MACVR,IAAI,CAACS,IAAI,GAAGD,QAAQ;MACpBE,SAAS,CAACV,IAAI,CAACS,IAAI,CAAC;IACxB;EACJ,CAAC;EAED,MAAMC,SAAS,GAAG,MAAOC,KAAa,IAAK;IACvCN,aAAa,CAAC,IAAI,CAAC;IACnB,IAAI;MACA,MAAMH,WAAW,CAACU,aAAa,CAC3BZ,IAAI,CAACa,EAAE,EACPpB,mBAAmB,CAACU,UAAU,EAAE,YAAY,CAAC,EAC7CQ,KACJ,CAAC;MAEDP,aAAa,CAAC,IAAI,CAAC;MACnBC,aAAa,CAAC,KAAK,CAAC;MACpBC,YAAY,CAAC;QACTQ,MAAM,EAAE,SAAS;QACjBC,OAAO,EAAE;MACb,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,IAAIC,MAAc,GAAG,cAAc;MACnC,IAAID,KAAK,YAAYtB,WAAW,EAAE;QAC9BuB,MAAM,GAAGD,KAAK,CAACD,OAAO;MAC1B;MAEAV,aAAa,CAAC,KAAK,CAAC;MACpBC,YAAY,CAAC;QACTQ,MAAM,EAAE,OAAO;QACfC,OAAO,EAAEE;MACb,CAAC,CAAC;IACN;EACJ,CAAC;EAED,oBACIrB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACItB,OAAA,CAACP,MAAM;MACH8B,IAAI,EAAC,eAAe;MACpBC,YAAY,EAAE,CAAE;MAChBC,KAAK,EAAErB,IAAI,CAACS,IAAK;MACjBa,SAAS,EAAE,CAAE;MACbC,GAAG,EAAE,EAAG;MACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEjB,QAAQ,KAAK;QAC3BD,WAAW,CAACC,QAAQ,CAAC;MACzB;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACJ,CAAC;AAEX;AAAC5B,EAAA,CAvDuBF,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}