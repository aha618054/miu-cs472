{"ast":null,"code":"import{createContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const initStateValue={posts:[],searchDate:new Date(),isVoted:false,isAddedNew:false,loading:false,notify:{status:\"success\",message:\"\"}};const initContextValue={...initStateValue,updatePosts:posts=>{},updateSearchDate:searchDate=>{},updateIsVoted:isVoted=>{},updateIsAddedNew:isVoted=>{},updateLoading:loading=>{},updateNotify:notify=>{}};export const GlobalContext=/*#__PURE__*/createContext(initContextValue);export function PostsContext(_ref){let{children}=_ref;const[state,setState]=useState(initStateValue);const updatePosts=posts=>{setState(prev=>({...prev,posts}));};const updateSearchDate=searchDate=>{setState(prev=>({...prev,searchDate}));};const updateIsVoted=isVoted=>{setState(prev=>({...prev,isVoted}));};const updateIsAddedNew=isAddedNew=>{setState(prev=>({...prev,isAddedNew}));};const updateLoading=loading=>{setState(prev=>({...prev,loading}));};const updateNotify=notify=>{setState(prev=>({...prev,notify}));};return/*#__PURE__*/_jsx(GlobalContext.Provider,{value:{posts:state.posts,searchDate:state.searchDate,isVoted:state.isVoted,isAddedNew:state.isAddedNew,loading:state.loading,notify:state.notify,updatePosts,updateSearchDate,updateIsVoted,updateIsAddedNew,updateLoading,updateNotify},children:children});}","map":{"version":3,"names":["createContext","useState","jsx","_jsx","initStateValue","posts","searchDate","Date","isVoted","isAddedNew","loading","notify","status","message","initContextValue","updatePosts","updateSearchDate","updateIsVoted","updateIsAddedNew","updateLoading","updateNotify","GlobalContext","PostsContext","_ref","children","state","setState","prev","Provider","value"],"sources":["D:/MIU/daily-diary-fullstackjs-ci-cd/daily-diary-front/src/contexts/PostsContext.tsx"],"sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\r\nimport { Post } from \"../models/Post\";\r\nimport { AlertColor } from \"@mui/material\";\r\n\r\ntype StateType = {\r\n    posts: Post[];\r\n    searchDate: Date;\r\n    isVoted: boolean;\r\n    isAddedNew: boolean;\r\n    loading: boolean;\r\n    notify: Notify;\r\n};\r\n\r\ntype Notify = {\r\n    status: AlertColor;\r\n    message: string;\r\n};\r\n\r\nconst initStateValue = {\r\n    posts: [] as Post[],\r\n    searchDate: new Date(),\r\n    isVoted: false,\r\n    isAddedNew: false,\r\n    loading: false,\r\n    notify: { status: \"success\" as AlertColor, message: \"\" },\r\n};\r\n\r\nexport type ContextType = {\r\n    posts: Post[];\r\n    searchDate: Date;\r\n    isVoted: boolean;\r\n    isAddedNew: boolean;\r\n    loading: boolean;\r\n    notify: {\r\n        status: AlertColor;\r\n        message: string;\r\n    };\r\n    updatePosts: Function;\r\n    updateSearchDate: Function;\r\n    updateIsVoted: Function;\r\n    updateIsAddedNew: Function;\r\n    updateLoading: Function;\r\n    updateNotify: Function;\r\n};\r\n\r\nconst initContextValue = {\r\n    ...initStateValue,\r\n    updatePosts: (posts: Post[]) => {},\r\n    updateSearchDate: (searchDate: Date) => {},\r\n    updateIsVoted: (isVoted: boolean) => {},\r\n    updateIsAddedNew: (isVoted: boolean) => {},\r\n    updateLoading: (loading: boolean) => {},\r\n    updateNotify: (notify: Notify) => {},\r\n};\r\n\r\nexport const GlobalContext = createContext(initContextValue);\r\n\r\nexport function PostsContext({ children }: { children: ReactNode }) {\r\n    const [state, setState] = useState<StateType>(initStateValue);\r\n\r\n    const updatePosts = (posts: Post[]) => {\r\n        setState((prev) => ({ ...prev, posts }));\r\n    };\r\n\r\n    const updateSearchDate = (searchDate: Date) => {\r\n        setState((prev) => ({ ...prev, searchDate }));\r\n    };\r\n\r\n    const updateIsVoted = (isVoted: boolean) => {\r\n        setState((prev) => ({ ...prev, isVoted }));\r\n    };\r\n\r\n    const updateIsAddedNew = (isAddedNew: boolean) => {\r\n        setState((prev) => ({ ...prev, isAddedNew }));\r\n    };\r\n\r\n    const updateLoading = (loading: boolean) => {\r\n        setState((prev) => ({ ...prev, loading }));\r\n    };\r\n\r\n    const updateNotify = (notify: Notify) => {\r\n        setState((prev) => ({ ...prev, notify }));\r\n    };\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                posts: state.posts,\r\n                searchDate: state.searchDate,\r\n                isVoted: state.isVoted,\r\n                isAddedNew: state.isAddedNew,\r\n                loading: state.loading,\r\n                notify: state.notify,\r\n                updatePosts,\r\n                updateSearchDate,\r\n                updateIsVoted,\r\n                updateIsAddedNew,\r\n                updateLoading,\r\n                updateNotify,\r\n            }}\r\n        >\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAaC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAkB3D,KAAM,CAAAC,cAAc,CAAG,CACnBC,KAAK,CAAE,EAAY,CACnBC,UAAU,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtBC,OAAO,CAAE,KAAK,CACdC,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,KAAK,CACdC,MAAM,CAAE,CAAEC,MAAM,CAAE,SAAuB,CAAEC,OAAO,CAAE,EAAG,CAC3D,CAAC,CAoBD,KAAM,CAAAC,gBAAgB,CAAG,CACrB,GAAGV,cAAc,CACjBW,WAAW,CAAGV,KAAa,EAAK,CAAC,CAAC,CAClCW,gBAAgB,CAAGV,UAAgB,EAAK,CAAC,CAAC,CAC1CW,aAAa,CAAGT,OAAgB,EAAK,CAAC,CAAC,CACvCU,gBAAgB,CAAGV,OAAgB,EAAK,CAAC,CAAC,CAC1CW,aAAa,CAAGT,OAAgB,EAAK,CAAC,CAAC,CACvCU,YAAY,CAAGT,MAAc,EAAK,CAAC,CACvC,CAAC,CAED,MAAO,MAAM,CAAAU,aAAa,cAAGrB,aAAa,CAACc,gBAAgB,CAAC,CAE5D,MAAO,SAAS,CAAAQ,YAAYA,CAAAC,IAAA,CAAwC,IAAvC,CAAEC,QAAkC,CAAC,CAAAD,IAAA,CAC9D,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGzB,QAAQ,CAAYG,cAAc,CAAC,CAE7D,KAAM,CAAAW,WAAW,CAAIV,KAAa,EAAK,CACnCqB,QAAQ,CAAEC,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAEtB,KAAM,CAAC,CAAC,CAAC,CAC5C,CAAC,CAED,KAAM,CAAAW,gBAAgB,CAAIV,UAAgB,EAAK,CAC3CoB,QAAQ,CAAEC,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAErB,UAAW,CAAC,CAAC,CAAC,CACjD,CAAC,CAED,KAAM,CAAAW,aAAa,CAAIT,OAAgB,EAAK,CACxCkB,QAAQ,CAAEC,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAEnB,OAAQ,CAAC,CAAC,CAAC,CAC9C,CAAC,CAED,KAAM,CAAAU,gBAAgB,CAAIT,UAAmB,EAAK,CAC9CiB,QAAQ,CAAEC,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAElB,UAAW,CAAC,CAAC,CAAC,CACjD,CAAC,CAED,KAAM,CAAAU,aAAa,CAAIT,OAAgB,EAAK,CACxCgB,QAAQ,CAAEC,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAEjB,OAAQ,CAAC,CAAC,CAAC,CAC9C,CAAC,CAED,KAAM,CAAAU,YAAY,CAAIT,MAAc,EAAK,CACrCe,QAAQ,CAAEC,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAEhB,MAAO,CAAC,CAAC,CAAC,CAC7C,CAAC,CAED,mBACIR,IAAA,CAACkB,aAAa,CAACO,QAAQ,EACnBC,KAAK,CAAE,CACHxB,KAAK,CAAEoB,KAAK,CAACpB,KAAK,CAClBC,UAAU,CAAEmB,KAAK,CAACnB,UAAU,CAC5BE,OAAO,CAAEiB,KAAK,CAACjB,OAAO,CACtBC,UAAU,CAAEgB,KAAK,CAAChB,UAAU,CAC5BC,OAAO,CAAEe,KAAK,CAACf,OAAO,CACtBC,MAAM,CAAEc,KAAK,CAACd,MAAM,CACpBI,WAAW,CACXC,gBAAgB,CAChBC,aAAa,CACbC,gBAAgB,CAChBC,aAAa,CACbC,YACJ,CAAE,CAAAI,QAAA,CAEDA,QAAQ,CACW,CAAC,CAEjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}