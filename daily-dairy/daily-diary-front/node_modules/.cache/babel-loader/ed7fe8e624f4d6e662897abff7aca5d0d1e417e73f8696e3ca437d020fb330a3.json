{"ast":null,"code":"import{Box,Button,Card,CardContent,CardHeader,Container,TextField}from\"@mui/material\";import SendOutlinedIcon from\"@mui/icons-material/SendOutlined\";import SkipPreviousOutlinedIcon from\"@mui/icons-material/SkipPreviousOutlined\";import{Link,useNavigate}from\"react-router-dom\";import{useContext,useState}from\"react\";import{GlobalContext}from\"../../contexts/PostsContext\";import{PostService}from\"../../services/post/postService\";import{convertDateToFormat}from\"../../utils/utils\";import{CustomError}from\"../../utils/customError\";import{isRequired,isValidMaxlength}from\"../../utils/validateInput\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddPostPage(){const navigate=useNavigate();const postService=new PostService();const{searchDate,updateIsAddedNew,updateLoading,updateNotify}=useContext(GlobalContext);const[postInputForm,setPostInputForm]=useState({title:\"\",errorTitle:\"\",description:\"\",errorDescription:\"\",isValidForm:false});const validateInputForm=()=>{let tempErrors={errorTitle:\"\",errorDescription:\"\",isValidForm:false};if(!isRequired(postInputForm.title)){tempErrors.errorTitle=\"Title is required\";}else if(!isValidMaxlength(postInputForm.title,200)){tempErrors.errorTitle=\"Title must be less len 200 characters\";}if(!isRequired(postInputForm.description)){tempErrors.errorDescription=\"Description is required\";}else if(!isValidMaxlength(postInputForm.description,1000)){tempErrors.errorDescription=\"Description must be less len 1000 characters\";}tempErrors.isValidForm=!tempErrors.errorTitle&&!tempErrors.errorDescription;setPostInputForm(prev=>({...prev,errorTitle:tempErrors.errorTitle,errorDescription:tempErrors.errorDescription,isValidForm:tempErrors.isValidForm}));return tempErrors.isValidForm;};const handleSubmit=e=>{e.preventDefault();if(validateInputForm()){addPost();}};const handleChange=e=>{setPostInputForm({...postInputForm,[e.target.name]:e.target.value});};const addPost=async()=>{try{updateLoading(true);await postService.addPost(convertDateToFormat(searchDate,\"MM-dd-yyyy\"),{id:\"\",title:postInputForm.title,body:postInputForm.description,vote:0});updateIsAddedNew(true);updateLoading(false);updateNotify({status:\"success\",message:\"Add post successfully\"});navigate(\"/posts\");}catch(error){let errMsg=\"Unknow error\";if(error instanceof CustomError){errMsg=error.message;}updateLoading(false);updateNotify({status:\"error\",message:errMsg});}};return/*#__PURE__*/_jsx(Container,{maxWidth:\"xl\",children:/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",sx:{m:2,p:2},children:[/*#__PURE__*/_jsx(CardHeader,{title:\"New Post\"}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{component:\"form\",sx:{\"& .MuiTextField-root\":{mt:1,mb:1,width:\"100%\"},Button:{mt:1}},noValidate:true,autoComplete:\"off\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{required:true,fullWidth:true,label:\"Title\",name:\"title\",value:postInputForm.title,placeholder:\"Enter title\",onChange:handleChange,error:postInputForm.errorTitle.length>0,helperText:postInputForm.errorTitle})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{required:true,fullWidth:true,label:\"Description\",multiline:true,rows:15,name:\"description\",value:postInputForm.description,placeholder:\"Enter description\",onChange:handleChange,error:postInputForm.errorDescription.length>0,helperText:postInputForm.errorDescription})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{component:Link,to:\"/posts\",variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(SkipPreviousOutlinedIcon,{}),sx:{mt:1},children:\"Back\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(SendOutlinedIcon,{}),type:\"submit\",sx:{ml:1},children:\"Submit\"})]})]})})]})});}","map":{"version":3,"names":["Box","Button","Card","CardContent","CardHeader","Container","TextField","SendOutlinedIcon","SkipPreviousOutlinedIcon","Link","useNavigate","useContext","useState","GlobalContext","PostService","convertDateToFormat","CustomError","isRequired","isValidMaxlength","jsx","_jsx","jsxs","_jsxs","AddPostPage","navigate","postService","searchDate","updateIsAddedNew","updateLoading","updateNotify","postInputForm","setPostInputForm","title","errorTitle","description","errorDescription","isValidForm","validateInputForm","tempErrors","prev","handleSubmit","e","preventDefault","addPost","handleChange","target","name","value","id","body","vote","status","message","error","errMsg","maxWidth","children","variant","sx","m","p","component","mt","mb","width","noValidate","autoComplete","onSubmit","required","fullWidth","label","placeholder","onChange","length","helperText","multiline","rows","to","startIcon","type","ml"],"sources":["D:/MIU/daily-diary-fullstackjs-ci-cd/daily-diary-front/src/pages/AddPostPage/AddPostPage.tsx"],"sourcesContent":["import {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Container,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport SendOutlinedIcon from \"@mui/icons-material/SendOutlined\";\r\nimport SkipPreviousOutlinedIcon from \"@mui/icons-material/SkipPreviousOutlined\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { ChangeEvent, FormEvent, useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../../contexts/PostsContext\";\r\nimport { PostService } from \"../../services/post/postService\";\r\nimport { convertDateToFormat } from \"../../utils/utils\";\r\nimport { CustomError } from \"../../utils/customError\";\r\nimport { isRequired, isValidMaxlength } from \"../../utils/validateInput\";\r\n\r\ntype PostInputForm = {\r\n    title: string;\r\n    errorTitle: string;\r\n    description: string;\r\n    errorDescription: string;\r\n    isValidForm: boolean;\r\n};\r\n\r\nexport default function AddPostPage() {\r\n    const navigate = useNavigate();\r\n    const postService = new PostService();\r\n    const { searchDate, updateIsAddedNew, updateLoading, updateNotify } =\r\n        useContext(GlobalContext);\r\n\r\n    const [postInputForm, setPostInputForm] = useState({\r\n        title: \"\",\r\n        errorTitle: \"\",\r\n        description: \"\",\r\n        errorDescription: \"\",\r\n        isValidForm: false,\r\n    });\r\n\r\n    const validateInputForm = (): boolean => {\r\n        let tempErrors = {\r\n            errorTitle: \"\",\r\n            errorDescription: \"\",\r\n            isValidForm: false,\r\n        };\r\n\r\n        if (!isRequired(postInputForm.title)) {\r\n            tempErrors.errorTitle = \"Title is required\";\r\n        } else if (!isValidMaxlength(postInputForm.title, 200)) {\r\n            tempErrors.errorTitle = \"Title must be less len 200 characters\";\r\n        }\r\n\r\n        if (!isRequired(postInputForm.description)) {\r\n            tempErrors.errorDescription = \"Description is required\";\r\n        } else if (!isValidMaxlength(postInputForm.description, 1000)) {\r\n            tempErrors.errorDescription =\r\n                \"Description must be less len 1000 characters\";\r\n        }\r\n\r\n        tempErrors.isValidForm =\r\n            !tempErrors.errorTitle && !tempErrors.errorDescription;\r\n\r\n        setPostInputForm((prev) => ({\r\n            ...prev,\r\n            errorTitle: tempErrors.errorTitle,\r\n            errorDescription: tempErrors.errorDescription,\r\n            isValidForm: tempErrors.isValidForm,\r\n        }));\r\n        return tempErrors.isValidForm;\r\n    };\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (validateInputForm()) {\r\n            addPost();\r\n        }\r\n    };\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPostInputForm({ ...postInputForm, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const addPost = async () => {\r\n        try {\r\n            updateLoading(true);\r\n            await postService.addPost(\r\n                convertDateToFormat(searchDate, \"MM-dd-yyyy\"),\r\n                {\r\n                    id: \"\",\r\n                    title: postInputForm.title,\r\n                    body: postInputForm.description,\r\n                    vote: 0,\r\n                }\r\n            );\r\n            updateIsAddedNew(true);\r\n            updateLoading(false);\r\n            updateNotify({\r\n                status: \"success\",\r\n                message: \"Add post successfully\",\r\n            });\r\n            navigate(\"/posts\");\r\n        } catch (error) {\r\n            let errMsg: string = \"Unknow error\";\r\n            if (error instanceof CustomError) {\r\n                errMsg = error.message;\r\n            }\r\n\r\n            updateLoading(false);\r\n            updateNotify({\r\n                status: \"error\",\r\n                message: errMsg,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n            <Card variant=\"outlined\" sx={{ m: 2, p: 2 }}>\r\n                <CardHeader title=\"New Post\" />\r\n                <CardContent>\r\n                    <Box\r\n                        component=\"form\"\r\n                        sx={{\r\n                            \"& .MuiTextField-root\": {\r\n                                mt: 1,\r\n                                mb: 1,\r\n                                width: \"100%\",\r\n                            },\r\n                            Button: { mt: 1 },\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <div>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                label=\"Title\"\r\n                                name=\"title\"\r\n                                value={postInputForm.title}\r\n                                placeholder=\"Enter title\"\r\n                                onChange={handleChange}\r\n                                error={postInputForm.errorTitle.length > 0}\r\n                                helperText={postInputForm.errorTitle}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                label=\"Description\"\r\n                                multiline\r\n                                rows={15}\r\n                                name=\"description\"\r\n                                value={postInputForm.description}\r\n                                placeholder=\"Enter description\"\r\n                                onChange={handleChange}\r\n                                error={\r\n                                    postInputForm.errorDescription.length > 0\r\n                                }\r\n                                helperText={postInputForm.errorDescription}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button\r\n                                component={Link}\r\n                                to=\"/posts\"\r\n                                variant=\"outlined\"\r\n                                startIcon={<SkipPreviousOutlinedIcon />}\r\n                                sx={{ mt: 1 }}\r\n                            >\r\n                                Back\r\n                            </Button>\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                startIcon={<SendOutlinedIcon />}\r\n                                type=\"submit\"\r\n                                sx={{ ml: 1 }}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}