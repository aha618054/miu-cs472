{"ast":null,"code":"import { CustomError } from \"../utils/customError\";\nimport { StatusCode } from \"../models/enums/StatusCodeEnum\";\nexport class APIService {\n  constructor() {\n    this.getBaseUrl = () => {\n      const url = process.env.REACT_APP_API_URL;\n      if (!process.env.REACT_APP_API_URL) {\n        throw new CustomError(500, \"API URL is not found\");\n      }\n      return process.env.REACT_APP_API_URL;\n    };\n    this.generateHeader = () => {\n      const headers = new Headers();\n      headers.set(\"Accept\", \"application/json\");\n      headers.set(\"Content-Type\", \"application/json\");\n      return headers;\n    };\n    this.getData = url => {\n      return fetch(url, {\n        method: \"GET\",\n        headers: this.generateHeader()\n      });\n    };\n    this.postData = (url, data) => {\n      return fetch(url, {\n        method: \"POST\",\n        headers: this.generateHeader(),\n        body: JSON.stringify(data)\n      });\n    };\n    this.putData = (url, data) => {\n      return fetch(url, {\n        method: \"PUT\",\n        headers: this.generateHeader(),\n        body: JSON.stringify(data)\n      });\n    };\n    this.patchData = (url, data) => {\n      return fetch(url, {\n        method: \"PATCH\",\n        headers: this.generateHeader(),\n        body: JSON.stringify(data)\n      });\n    };\n    this.deleteData = url => {\n      return fetch(url, {\n        method: \"GET\",\n        headers: this.generateHeader()\n      });\n    };\n    this.throwError = async response => {\n      const errorResponse = await response.json();\n      if (errorResponse.status === StatusCode.BAD_REQUEST) {\n        throw new CustomError(errorResponse.status, errorResponse.message, response.statusText);\n      }\n      window.location.href = \"/error\";\n    };\n  }\n}","map":{"version":3,"names":["CustomError","StatusCode","APIService","constructor","getBaseUrl","url","process","env","REACT_APP_API_URL","generateHeader","headers","Headers","set","getData","fetch","method","postData","data","body","JSON","stringify","putData","patchData","deleteData","throwError","response","errorResponse","json","status","BAD_REQUEST","message","statusText","window","location","href"],"sources":["D:/MIU/daily-diary-fullstackjs-ci-cd/daily-diary-front/src/services/apiService.ts"],"sourcesContent":["import { CustomError } from \"../utils/customError\";\r\nimport { StatusCode } from \"../models/enums/StatusCodeEnum\";\r\nimport { ErrorResponse } from \"../models/ErrorResponse\";\r\n\r\nexport class APIService {\r\n    getBaseUrl = (): string => {\r\n        const url = process.env.REACT_APP_API_URL;\r\n        if (!process.env.REACT_APP_API_URL) {\r\n            throw new CustomError(500, \"API URL is not found\");\r\n        }\r\n        return process.env.REACT_APP_API_URL;\r\n    };\r\n\r\n    generateHeader = (): Headers => {\r\n        const headers: Headers = new Headers();\r\n        headers.set(\"Accept\", \"application/json\");\r\n        headers.set(\"Content-Type\", \"application/json\");\r\n        return headers;\r\n    };\r\n\r\n    getData = (url: string): Promise<Response> => {\r\n        return fetch(url, {\r\n            method: \"GET\",\r\n            headers: this.generateHeader(),\r\n        });\r\n    };\r\n\r\n    postData = (url: string, data: any): Promise<Response> => {\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            headers: this.generateHeader(),\r\n            body: JSON.stringify(data),\r\n        });\r\n    };\r\n\r\n    putData = (url: string, data: any): Promise<Response> => {\r\n        return fetch(url, {\r\n            method: \"PUT\",\r\n            headers: this.generateHeader(),\r\n            body: JSON.stringify(data),\r\n        });\r\n    };\r\n\r\n    patchData = (url: string, data: any): Promise<Response> => {\r\n        return fetch(url, {\r\n            method: \"PATCH\",\r\n            headers: this.generateHeader(),\r\n            body: JSON.stringify(data),\r\n        });\r\n    };\r\n\r\n    deleteData = (url: string): Promise<Response> => {\r\n        return fetch(url, {\r\n            method: \"GET\",\r\n            headers: this.generateHeader(),\r\n        });\r\n    };\r\n\r\n    throwError = async (response: Response) => {\r\n        const errorResponse: ErrorResponse = await response.json();\r\n        if (errorResponse.status === StatusCode.BAD_REQUEST) {\r\n            throw new CustomError(\r\n                errorResponse.status,\r\n                errorResponse.message,\r\n                response.statusText\r\n            );\r\n        }\r\n        window.location.href = \"/error\";\r\n    };\r\n}\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,sBAAsB;AAClD,SAASC,UAAU,QAAQ,gCAAgC;AAG3D,OAAO,MAAMC,UAAU,CAAC;EAAAC,YAAA;IAAA,KACpBC,UAAU,GAAG,MAAc;MACvB,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;MACzC,IAAI,CAACF,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAE;QAChC,MAAM,IAAIR,WAAW,CAAC,GAAG,EAAE,sBAAsB,CAAC;MACtD;MACA,OAAOM,OAAO,CAACC,GAAG,CAACC,iBAAiB;IACxC,CAAC;IAAA,KAEDC,cAAc,GAAG,MAAe;MAC5B,MAAMC,OAAgB,GAAG,IAAIC,OAAO,CAAC,CAAC;MACtCD,OAAO,CAACE,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC;MACzCF,OAAO,CAACE,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;MAC/C,OAAOF,OAAO;IAClB,CAAC;IAAA,KAEDG,OAAO,GAAIR,GAAW,IAAwB;MAC1C,OAAOS,KAAK,CAACT,GAAG,EAAE;QACdU,MAAM,EAAE,KAAK;QACbL,OAAO,EAAE,IAAI,CAACD,cAAc,CAAC;MACjC,CAAC,CAAC;IACN,CAAC;IAAA,KAEDO,QAAQ,GAAG,CAACX,GAAW,EAAEY,IAAS,KAAwB;MACtD,OAAOH,KAAK,CAACT,GAAG,EAAE;QACdU,MAAM,EAAE,MAAM;QACdL,OAAO,EAAE,IAAI,CAACD,cAAc,CAAC,CAAC;QAC9BS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI;MAC7B,CAAC,CAAC;IACN,CAAC;IAAA,KAEDI,OAAO,GAAG,CAAChB,GAAW,EAAEY,IAAS,KAAwB;MACrD,OAAOH,KAAK,CAACT,GAAG,EAAE;QACdU,MAAM,EAAE,KAAK;QACbL,OAAO,EAAE,IAAI,CAACD,cAAc,CAAC,CAAC;QAC9BS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI;MAC7B,CAAC,CAAC;IACN,CAAC;IAAA,KAEDK,SAAS,GAAG,CAACjB,GAAW,EAAEY,IAAS,KAAwB;MACvD,OAAOH,KAAK,CAACT,GAAG,EAAE;QACdU,MAAM,EAAE,OAAO;QACfL,OAAO,EAAE,IAAI,CAACD,cAAc,CAAC,CAAC;QAC9BS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI;MAC7B,CAAC,CAAC;IACN,CAAC;IAAA,KAEDM,UAAU,GAAIlB,GAAW,IAAwB;MAC7C,OAAOS,KAAK,CAACT,GAAG,EAAE;QACdU,MAAM,EAAE,KAAK;QACbL,OAAO,EAAE,IAAI,CAACD,cAAc,CAAC;MACjC,CAAC,CAAC;IACN,CAAC;IAAA,KAEDe,UAAU,GAAG,MAAOC,QAAkB,IAAK;MACvC,MAAMC,aAA4B,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC1D,IAAID,aAAa,CAACE,MAAM,KAAK3B,UAAU,CAAC4B,WAAW,EAAE;QACjD,MAAM,IAAI7B,WAAW,CACjB0B,aAAa,CAACE,MAAM,EACpBF,aAAa,CAACI,OAAO,EACrBL,QAAQ,CAACM,UACb,CAAC;MACL;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACnC,CAAC;EAAA;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}