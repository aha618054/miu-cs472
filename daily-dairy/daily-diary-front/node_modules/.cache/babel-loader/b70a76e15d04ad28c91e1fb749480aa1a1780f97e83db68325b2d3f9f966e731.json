{"ast":null,"code":"import{StatusCode}from\"../../models/enums/StatusCodeEnum\";import{APIService}from\"../apiService\";export class InquiryService extends APIService{constructor(){super(...arguments);this.sendInquiry=async inquiry=>{const url=\"\".concat(this.getBaseUrl(),\"/inquiries\");const response=await this.postData(url,inquiry);if(response.status!==StatusCode.CREATED){await this.throwError(response);}return await response.json();};}}","map":{"version":3,"names":["StatusCode","APIService","InquiryService","constructor","arguments","sendInquiry","inquiry","url","concat","getBaseUrl","response","postData","status","CREATED","throwError","json"],"sources":["D:/MIU/daily-diary-fullstackjs-ci-cd/daily-diary-front/src/services/inquiry/inquiryService.ts"],"sourcesContent":["import { StatusCode } from \"../../models/enums/StatusCodeEnum\";\r\nimport { Inquiry } from \"../../models/Inquiry\";\r\nimport { APIService } from \"../apiService\";\r\n\r\nexport class InquiryService extends APIService {\r\n    sendInquiry = async (inquiry: Inquiry): Promise<Inquiry> => {\r\n        const url: string = `${this.getBaseUrl()}/inquiries`;\r\n        const response: Response = await this.postData(url, inquiry);\r\n\r\n        if (response.status !== StatusCode.CREATED) {\r\n            await this.throwError(response);\r\n        }\r\n\r\n        return await response.json();\r\n    };\r\n}\r\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,mCAAmC,CAE9D,OAASC,UAAU,KAAQ,eAAe,CAE1C,MAAO,MAAM,CAAAC,cAAc,QAAS,CAAAD,UAAW,CAAAE,YAAA,WAAAC,SAAA,OAC3CC,WAAW,CAAG,KAAO,CAAAC,OAAgB,EAAuB,CACxD,KAAM,CAAAC,GAAW,IAAAC,MAAA,CAAM,IAAI,CAACC,UAAU,CAAC,CAAC,cAAY,CACpD,KAAM,CAAAC,QAAkB,CAAG,KAAM,KAAI,CAACC,QAAQ,CAACJ,GAAG,CAAED,OAAO,CAAC,CAE5D,GAAII,QAAQ,CAACE,MAAM,GAAKZ,UAAU,CAACa,OAAO,CAAE,CACxC,KAAM,KAAI,CAACC,UAAU,CAACJ,QAAQ,CAAC,CACnC,CAEA,MAAO,MAAM,CAAAA,QAAQ,CAACK,IAAI,CAAC,CAAC,CAChC,CAAC,EACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}