{"ast":null,"code":"import{CustomError}from\"../utils/customError\";import{StatusCode}from\"../models/enums/StatusCodeEnum\";export class APIService{constructor(){this.getBaseUrl=()=>{if(!process.env.REACT_APP_API_URL){throw new CustomError(500,\"API URL is not found\");}return process.env.REACT_APP_API_URL;};this.generateHeader=()=>{const headers=new Headers();headers.set(\"Accept\",\"application/json\");headers.set(\"Content-Type\",\"application/json\");return headers;};this.getData=url=>{return fetch(url,{method:\"GET\",headers:this.generateHeader()});};this.postData=(url,data)=>{return fetch(url,{method:\"POST\",headers:this.generateHeader(),body:JSON.stringify(data)});};this.putData=(url,data)=>{return fetch(url,{method:\"PUT\",headers:this.generateHeader(),body:JSON.stringify(data)});};this.patchData=(url,data)=>{return fetch(url,{method:\"PATCH\",headers:this.generateHeader(),body:JSON.stringify(data)});};this.deleteData=url=>{return fetch(url,{method:\"GET\",headers:this.generateHeader()});};this.throwError=async response=>{const errorResponse=await response.json();if(errorResponse.status===StatusCode.BAD_REQUEST){throw new CustomError(errorResponse.status,errorResponse.message,response.statusText);}window.location.href=\"/error\";};}}","map":{"version":3,"names":["CustomError","StatusCode","APIService","constructor","getBaseUrl","process","env","REACT_APP_API_URL","generateHeader","headers","Headers","set","getData","url","fetch","method","postData","data","body","JSON","stringify","putData","patchData","deleteData","throwError","response","errorResponse","json","status","BAD_REQUEST","message","statusText","window","location","href"],"sources":["D:/MIU/daily-diary-fullstackjs-ci-cd/daily-diary-front/src/services/apiService.ts"],"sourcesContent":["import { CustomError } from \"../utils/customError\";\r\nimport { StatusCode } from \"../models/enums/StatusCodeEnum\";\r\nimport { ErrorResponse } from \"../models/ErrorResponse\";\r\n\r\nexport class APIService {\r\n    getBaseUrl = (): string => {\r\n        if (!process.env.REACT_APP_API_URL) {\r\n            throw new CustomError(500, \"API URL is not found\");\r\n        }\r\n        return process.env.REACT_APP_API_URL;\r\n    };\r\n\r\n    generateHeader = (): Headers => {\r\n        const headers: Headers = new Headers();\r\n        headers.set(\"Accept\", \"application/json\");\r\n        headers.set(\"Content-Type\", \"application/json\");\r\n        return headers;\r\n    };\r\n\r\n    getData = (url: string): Promise<Response> => {\r\n        return fetch(url, {\r\n            method: \"GET\",\r\n            headers: this.generateHeader(),\r\n        });\r\n    };\r\n\r\n    postData = (url: string, data: any): Promise<Response> => {\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            headers: this.generateHeader(),\r\n            body: JSON.stringify(data),\r\n        });\r\n    };\r\n\r\n    putData = (url: string, data: any): Promise<Response> => {\r\n        return fetch(url, {\r\n            method: \"PUT\",\r\n            headers: this.generateHeader(),\r\n            body: JSON.stringify(data),\r\n        });\r\n    };\r\n\r\n    patchData = (url: string, data: any): Promise<Response> => {\r\n        return fetch(url, {\r\n            method: \"PATCH\",\r\n            headers: this.generateHeader(),\r\n            body: JSON.stringify(data),\r\n        });\r\n    };\r\n\r\n    deleteData = (url: string): Promise<Response> => {\r\n        return fetch(url, {\r\n            method: \"GET\",\r\n            headers: this.generateHeader(),\r\n        });\r\n    };\r\n\r\n    throwError = async (response: Response) => {\r\n        const errorResponse: ErrorResponse = await response.json();\r\n        if (errorResponse.status === StatusCode.BAD_REQUEST) {\r\n            throw new CustomError(\r\n                errorResponse.status,\r\n                errorResponse.message,\r\n                response.statusText\r\n            );\r\n        }\r\n        window.location.href = \"/error\";\r\n    };\r\n}\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,sBAAsB,CAClD,OAASC,UAAU,KAAQ,gCAAgC,CAG3D,MAAO,MAAM,CAAAC,UAAW,CAAAC,YAAA,OACpBC,UAAU,CAAG,IAAc,CACvB,GAAI,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAE,CAChC,KAAM,IAAI,CAAAP,WAAW,CAAC,GAAG,CAAE,sBAAsB,CAAC,CACtD,CACA,MAAO,CAAAK,OAAO,CAACC,GAAG,CAACC,iBAAiB,CACxC,CAAC,MAEDC,cAAc,CAAG,IAAe,CAC5B,KAAM,CAAAC,OAAgB,CAAG,GAAI,CAAAC,OAAO,CAAC,CAAC,CACtCD,OAAO,CAACE,GAAG,CAAC,QAAQ,CAAE,kBAAkB,CAAC,CACzCF,OAAO,CAACE,GAAG,CAAC,cAAc,CAAE,kBAAkB,CAAC,CAC/C,MAAO,CAAAF,OAAO,CAClB,CAAC,MAEDG,OAAO,CAAIC,GAAW,EAAwB,CAC1C,MAAO,CAAAC,KAAK,CAACD,GAAG,CAAE,CACdE,MAAM,CAAE,KAAK,CACbN,OAAO,CAAE,IAAI,CAACD,cAAc,CAAC,CACjC,CAAC,CAAC,CACN,CAAC,MAEDQ,QAAQ,CAAG,CAACH,GAAW,CAAEI,IAAS,GAAwB,CACtD,MAAO,CAAAH,KAAK,CAACD,GAAG,CAAE,CACdE,MAAM,CAAE,MAAM,CACdN,OAAO,CAAE,IAAI,CAACD,cAAc,CAAC,CAAC,CAC9BU,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAC7B,CAAC,CAAC,CACN,CAAC,MAEDI,OAAO,CAAG,CAACR,GAAW,CAAEI,IAAS,GAAwB,CACrD,MAAO,CAAAH,KAAK,CAACD,GAAG,CAAE,CACdE,MAAM,CAAE,KAAK,CACbN,OAAO,CAAE,IAAI,CAACD,cAAc,CAAC,CAAC,CAC9BU,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAC7B,CAAC,CAAC,CACN,CAAC,MAEDK,SAAS,CAAG,CAACT,GAAW,CAAEI,IAAS,GAAwB,CACvD,MAAO,CAAAH,KAAK,CAACD,GAAG,CAAE,CACdE,MAAM,CAAE,OAAO,CACfN,OAAO,CAAE,IAAI,CAACD,cAAc,CAAC,CAAC,CAC9BU,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAC7B,CAAC,CAAC,CACN,CAAC,MAEDM,UAAU,CAAIV,GAAW,EAAwB,CAC7C,MAAO,CAAAC,KAAK,CAACD,GAAG,CAAE,CACdE,MAAM,CAAE,KAAK,CACbN,OAAO,CAAE,IAAI,CAACD,cAAc,CAAC,CACjC,CAAC,CAAC,CACN,CAAC,MAEDgB,UAAU,CAAG,KAAO,CAAAC,QAAkB,EAAK,CACvC,KAAM,CAAAC,aAA4B,CAAG,KAAM,CAAAD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAC1D,GAAID,aAAa,CAACE,MAAM,GAAK3B,UAAU,CAAC4B,WAAW,CAAE,CACjD,KAAM,IAAI,CAAA7B,WAAW,CACjB0B,aAAa,CAACE,MAAM,CACpBF,aAAa,CAACI,OAAO,CACrBL,QAAQ,CAACM,UACb,CAAC,CACL,CACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACnC,CAAC,EACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}